create.table.accounts=CREATE TABLE `mini_pos1`.`accounts` ( `id` INT(11) NOT NULL AUTO_INCREMENT , `login_id` VARCHAR(11) NOT NULL , `password` VARCHAR(50) NOT NULL , `name` VARCHAR(50) NOT NULL , `phone` VARCHAR(15) NOT NULL , `email` VARCHAR(50) NOT NULL , PRIMARY KEY (`id`), UNIQUE (`login_id`)) ENGINE = InnoDB; 
create.table.categories=CREATE TABLE `mini_pos1`.``categories` ( `id` INT(11) NOT NULL AUTO_INCREMENT , `name` VARCHAR(50) NOT NULL , `image` BLOB NULL , PRIMARY KEY (`id`), UNIQUE (`name`)) ENGINE = InnoDB
create.table.products=CREATE TABLE `mini_pos1`.`products` ( `id` INT(11) NOT NULL AUTO_INCREMENT , `name` VARCHAR(50) NOT NULL , `category_id` INT(11) NOT NULL , `price` INT(11) NOT NULL , `image` MEDIUMBLOB NOT NULL ,`available` BOOLEAN NOT NULL, PRIMARY KEY (`id`), UNIQUE (`name`)) ENGINE = InnoDB
create.table.tax_info=CREATE TABLE `mini_pos1`.`tax_info` ( `id` INT NOT NULL AUTO_INCREMENT , `start_date` DATE NOT NULL , `tax_rate` INT NOT NULL , PRIMARY KEY (`id`), UNIQUE (`start_date`)) ENGINE = InnoDB
create.table.sale_details=CREATE TABLE `mini_pos1`.`sale_details` ( `id` INT(11) NOT NULL AUTO_INCREMENT , `sale_person_id` INT(11) NOT NULL , `sale_date` DATE NOT NULL , `sale_time` TIME NOT NULL , `tax_rate` INT(2) NOT NULL , `paid` BOOLEAN NOT NULL , PRIMARY KEY (`id`)) ENGINE = InnoDB; 
create.table.sale_items=CREATE TABLE `mini_pos1`.`sale_items` ( `id` INT(11) NOT NULL AUTO_INCREMENT , `sale_id` INT(11) NOT NULL , `product_id` INT(11) NOT NULL , `price` INT(11) NOT NULL , `quantity` INT(11) NOT NULL , PRIMARY KEY (`id`)) ENGINE = InnoDB;
create.table.payments=CREATE TABLE `mini_pos1`.`payments` ( `id` INT(11) NOT NULL AUTO_INCREMENT , `sale_id` INT(11) NOT NULL , `discount_percent` INT(11) NOT NULL , `discount_cash` INT(11) NOT NULL , `tendered` INT(11) NOT NULL , PRIMARY KEY (`id`), UNIQUE (`sale_id`)) ENGINE = InnoDB; 
account.select.byLoginId=select * from accounts where login_id=? limit 1
category.select.all=select * from categories
category.insert=insert into categories (name,image) values (?,?)
category.update=update categories set
category.checkIfCanInsert=select * from categories where name=? limit 1
category.checkIfCanUpdate=select * from categories where name=? and id!=? limit 1
category.delete.byId=delete from categories where id=?
product.select.all=select p.id,p.name,p.category_id,c.name as category_name,p.price,p.image,p.available from products p join categories c on c.id=p.category_id
product.checkIfCanInsert=select * from products where name=? limit 1
product.checkIfCanUpdate=select * from products where name=? and id!=? limit 1
product.insert=insert into products (name,category_id,price,image,available) values (?,?,?,?,?)
product.update=update products set name=? , price=?, category_id=? ,available=?
product.select.byCategoryId=select * from products where category_id=?
tax.select.all=select * from tax_info order by start_date
sale_detail.insert=insert into sale_details (sale_person_id,sale_date,sale_time,tax_rate,paid) values (?,?,?,?,?)
sale_detail.update.byId=update sale_details set sale_person_id=?,sale_date=?,sale_time=?,tax_rate=?,paid=? where id=?
sale_detail.delete.byId=delete from sale_details where id=?
sale_item.insert=insert into sale_items (sale_id,product_id,price,quantity) values (?,?,?,?)
sale_item.delete.bySaleId=delete from sale_items where sale_id=?
sale_detail.select.all=select sd.id,sd.sale_date,sd.sale_time,sd.sale_person_id,a.name as cashier,sum(si.quantity) as quantity,sum(si.price*si.quantity) as sub_total,sd.tax_rate,sd.paid from sale_details sd join accounts a on a.id=sd.sale_person_id join sale_items si on si.sale_id=sd.id group by sd.id
sale_item.select.bySaleId=select si.sale_id,si.product_id,p.name as product_name,si.price,si.quantity from sale_items si join products p on p.id=si.product_id where si.sale_id=?
payment.select.bySaleId=select * from payments where sale_id=?
payment.insert=insert into payments (sale_id,discount_percent,discount_cash,tendered) values (?,?,?,?)
payment.update.bySaleId=update payments set discount_percent=?,discount_cash=?,tendered=? where sale_id=?
payment.delete.bySaleId=delete from payments where sale_id=?